{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Anderson\\\\Fullstack Lab\\\\Abril 2020\\\\prj\\\\pages\\\\create-status.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nvar createStatus = function createStatus() {\n  var _useState = useState({\n    status: 'Bem',\n    coords: {\n      lat: null,\n      \"long\": null\n    }\n  }),\n      dados = _useState[0],\n      setDados = _useState[1];\n\n  var GetMyLocation = function GetMyLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setDados(function (old) {\n          return _objectSpread({}, old, {\n            coords: {\n              lat: position.coords.latitude,\n              \"long\": position.coords.longitude\n            }\n          });\n        });\n      });\n    }\n  };\n\n  var onStatusChange = function onStatusChange(evt) {\n    var value = evt.target.value;\n    setDados(function (old) {\n      return _objectSpread({}, old, {\n        status: value\n      });\n    });\n  };\n\n  var save = function save() {\n    return _regeneratorRuntime.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post('/api/save-status', dados));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"Bem\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }\n  }), \"Estou bem e sem sintomas\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 125\n    }\n  }), __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"Gripe\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }\n  }), \"Estou com sintomas de Gripe / Resfriado\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 142\n    }\n  }), __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"Covid\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }\n  }), \"Estou com sintomas de Coronga\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 132\n    }\n  }), \"Sua posi\\xE7\\xE3o atual: \", JSON.stringify(dados), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 55\n    }\n  }), __jsx(\"button\", {\n    onClick: GetMyLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Pegar Localiza\\xE7\\xE3o\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 71\n    }\n  }), __jsx(\"button\", {\n    onClick: save,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Salvar meu Status\"));\n};\n\nexport var __N_SSP = true;\nexport default createStatus;","map":{"version":3,"sources":["F:/Anderson/Fullstack Lab/Abril 2020/prj/pages/create-status.js"],"names":["React","useState","axios","createStatus","status","coords","lat","dados","setDados","GetMyLocation","navigator","geolocation","getCurrentPosition","position","old","latitude","longitude","onStatusChange","evt","value","target","save","post","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport axios from 'axios'\r\n\r\nconst createStatus = () => {\r\n\r\n    const [dados, setDados] = useState({\r\n        status: 'Bem',\r\n        coords: {\r\n            lat: null,\r\n            long: null\r\n        }\r\n    })\r\n\r\n    const GetMyLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                setDados(old => {\r\n                    return {\r\n                        ...old,\r\n                        coords: {\r\n                            lat: position.coords.latitude,\r\n                            long: position.coords.longitude\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    const onStatusChange = evt => {\r\n        const value = evt.target.value\r\n        setDados(old => {\r\n            return {\r\n                ...old,\r\n                status: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const save = async () => {\r\n        await axios.post('/api/save-status', dados)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label><input type=\"radio\" name='status' value='Bem' onClick={onStatusChange} />Estou bem e sem sintomas</label><br />\r\n            <label><input type=\"radio\" name='status' value='Gripe' onClick={onStatusChange} />Estou com sintomas de Gripe / Resfriado</label><br />\r\n            <label><input type=\"radio\" name='status' value='Covid' onClick={onStatusChange} />Estou com sintomas de Coronga</label><br />\r\n            Sua posição atual: {JSON.stringify(dados)}<br />\r\n            <button onClick={GetMyLocation}>Pegar Localização</button><br />\r\n            <button onClick={save}>Salvar meu Status</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default createStatus\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n    const session = await auth0.getSession(req)\r\n    if (session) {\r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}